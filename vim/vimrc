set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
source ~/.vim/plugins.vim
call vundle#end()            " required
filetype plugin indent on    " required

let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#fnamemod = ':t'

" General Settings
syntax on
" Leader is Space
let mapleader = ' '
let maplocalleader = '\'
set nu incsearch
set backspace=indent,eol,start
set encoding=utf8
set tm=500
set cmdheight=1
set title
set ruler
set showbreak=… " show ellipsis at breaking
set linebreak
set smartindent
set hlsearch
set ignorecase
set smartcase
set visualbell
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set laststatus=2 " Show Vim Status Line All The Time
let c_space_errors=1
match ErrorMsg /\s\+$\| \+\ze\t/

set ruler
set showmatch
set tags=tags;/
set undolevels=1000
set modelines=0

" My Style
set expandtab
set shiftwidth=2
set tabstop=2
set softtabstop=2

" Disable Arrow Keys
noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>

" 80 characters
set list
set list listchars=tab:»·,trail:·,nbsp:·
set textwidth=80
set colorcolumn=+1
set number
set relativenumber
set numberwidth=5

" Better j, k
nnoremap j gj
nnoremap k gk


" Use Tab to navigate Blocks
nnoremap <tab> %
vnoremap <tab> %

" map leader + s to save
nnoremap <leader>s :w<cr>

" Switch between header and cpp files
nmap <leader>h :A<CR>

" quickly close window
nnoremap <leader>x :x<cr>
nnoremap <leader>X :q!<cr>

" Better indentation in Visual Mode
vnoremap < <gv
vnoremap > >gv

" Disable Ex Mode
noremap Q <NOP>

"Split more natural direction
set splitbelow
set splitright

" NERDTree Shortcuts
map <C-n> :NERDTreeToggle<cr>
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" CtrlP Configuration
set wildignore+=*/target/*

let g:ctrlp_working_path_mode = 'a'
let g:ctrlp_extensions = ['autoignore']
let g:ctrlp_cmd = 'CtrlPMixed'

" C++ 
let g:cpp_class_scope_highlight = 1

" Formatting
noremap <C-F> :Autoformat<CR>

" TagList
nmap <C-m> :TagBar<cr>

" Python Config
let g:flake8_cmd='/usr/local/bin/flake8'

set t_Co=256
set background=dark
colorscheme elflord

let g:ycm_confirm_extra_conf = 0
" Syntastic Config
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

" YCM Config
let g:ycm_autoclose_preview_window_after_completion = 1
let g:ycm_min_num_identifier_candidate_chars = 4
let g:ycm_min_num_of_chars_for_completion = 4
let g:ycm_enable_diagnostic_signs = 0
let g:ycm_complete_in_comments = 0
let g:ycm_confirm_extra_conf = 0
let g:ycm_error_symbol = 'x'
let g:ycm_warning_symbol = '!'
let g:ycm_server_keep_logfiles = 1

nnoremap <leader>g :YcmCompleter GoToDefinitionElseDeclaration<CR>
nnoremap <leader>t :YcmCompleter GetType<CR>

" UltiSnips Config
" Trigger configuration. Do not use <tab> if you use https://github.com/Valloric/YouCompleteMe.
let g:ycm_key_list_previous_completion=['<Up>']
let g:UltiSnipsExpandTrigger="<c-j>"
let g:UltiSnipsListSnippets="<c-s-tab>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"

let g:ycm_use_ultisnips_completer = 1

" If you want :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit="vertical"
