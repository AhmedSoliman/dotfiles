# Ring the bell if any background window rang a bell
set -g bell-action any
set-option -g focus-events on

# Default termtype. If the rcfile sets $TERM, that overrides this value.
#set -g default-terminal "tmux-256color"
set -g default-terminal "alacritty"
set -ag terminal-overrides ",alacritty:Tc"

# Allows colorscheme to be changed on the fly! -- https://github.com/tmux/tmux/issues/3218
set -g allow-passthrough on

# Keep your finger on ctrl, or don't
bind-key ^D detach-client

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# Create splits and vertical splits
bind-key v split-window -h -p 50 -c "#{pane_current_path}"
bind-key ^V split-window -h -p 50 -c "#{pane_current_path}"
bind-key s split-window -p 50 -c "#{pane_current_path}"
bind-key ^S split-window -p 50 -c "#{pane_current_path}"

# select window with meta+number
bind -n M-0 select-window -t 0
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# Resize panes in vim
bind -n M-h if-shell "$is_vim" "send-keys M-h" "resize-pane -L 10"
bind -n M-l if-shell "$is_vim" "send-keys M-l" "resize-pane -R 10"
bind -n M-k if-shell "$is_vim" "send-keys M-j" "resize-pane -U 5"
bind -n M-j if-shell "$is_vim" "send-keys M-k" "resize-pane -D 5"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi
setw -g -gq utf8 on
set -gq status-utf8 on

# Window options

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1

# Screen like binding
unbind C-b
set -g prefix C-a
bind a send-prefix

# No escape time for vi mode
set -sg escape-time 0
set-option -g repeat-time 0

# Screen like binding for last window
unbind l
bind C-a last-window

set -g set-clipboard on
# Bigger history, 100k
set -g history-limit 100000

# New windows/pane in $PWD
bind c new-window -c "#{pane_current_path}"

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "[tmux] Config Reloaded!"

# Agressive Resizing
setw -g aggressive-resize on
setw -g monitor-activity on 
setw -g automatic-rename on

set -sg escape-time 0

# Window and Split Management
unbind =
bind = select-layout tiled
set -g pane-base-index 1
set -g base-index 1

# Split in the same directory please.
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

set -g renumber-windows on

set-option -g mouse on
# bind -n WheelUpPane copy-mode

unbind [
bind Escape copy-mode

unbind p
bind p paste-buffer
bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'r' send -X rectangle-toggle

# Fix title
set -g set-titles on
set -g set-titles-string "#T"

# Status Bar
set -g status-position top
source-file $HOME/.config/tinted-theming/tmux.base16.conf

source ~/.tmux/tmux-status.conf

# List of plugins -- https://github.com/tmux-plugins/tpm
# <C-a>I to install plugins
# <C-a>U to update plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tinted-theming/base16-tmux'
set -g @plugin 'tmux-plugins/tmux-battery'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
